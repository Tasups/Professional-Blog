export const BLOG_DATA = [
  {
    id: 1,
    title: "WHAT'S NEXT: C#, GO, OR PYTHON?",
    date: "August 10th, 2022",
    desc: "I'm a new-ish software developer, been doing it for about a year, who has finally gotten to a point of understanding JavaScript to consider going to other backend languages. I've used Node, Express, Mongoose, and others to create a backend server and connect with databases. The thing is, while NodeJS will work, there's other languages. If I want to stay abreast of the evolution of software, I need to consider using more than one language. So, which should it be? Let's take a look! \n Let's start alphabetically, in part so that I can hide my prejudice, but more likely to follow the format; that leaves us with C#. C# is a general-purpose, modern and object-oriented programming language pronounced as “C sharp.” The pros include the fact that C# is in demand in a lot of places due to legacy code/applications, it is used in various ways including games and web applications, there is a large community that has been able to keep C# in place as the 5th most popular language according to the TIOBE index as of this date. The cons are simple but large issues for a beginner and including a poor x-platform GUI, C# as it depends on the .NET framework, it takes ten lines of code to print your name, and C# is harder to learn due to its dependencies to .NET libraries. \n Next up is Go, some call it Golang. Go is a statically typed, compiled programming language designed at Google. I need to just put it out there before I go too far with this analysis and that is the Go mascot is awesome! There I said it. Let's move along. The pros of Go are that it is pretty fast, this is due to it being compiled. Another pro is that it has GoDoc, which is a static code analyzing tool that literally builds documentation our of your code. It also has built-in testing and seems to be pretty easy to learn. TIOBE puts it in 15th place. The cons are that its compiled. Being a new-ish developer, I haven't been hired yet and find myself learning at work. So, I can't download much to my machine and having to consider the tools that I can learn with, setting up a compiler might be a no-go for me. Given that and the fact that it doesn't have as many libraries as others may have, it may not be for me. That gopher though... \n Last but not least is Python. Python is a high-level, interpreted, general-purpose programming language. The pros of Python include that it has garbage-collection, supports multiple programming paradigms, and has a standard library. Its easy to learn, read, and write. This ease lends Python to higher productivity. Python is portable, you write once and can run it anywhere. Its open-sourced and has a lot of support in the area of libraries. Python has now moved into number one position on the TIOBE chart up to number one! The cons are that its slow as its interpreted and not compiled. It has trouble accessing the database as its layer for this is primitive and underdeveloped. As it is dynamically typed, it can have a bunch of runtime errors. \n So, where does this lead me? Well, with the popularity of Python skyrocketing and continuing to be a popular language and has been the language of the year for the last two years, I think I have to go with Python. One last benefit to consider in my situation, one that I didn't share with you until now, is that I know someone connected to a company that mainly uses Python in their stack. So, that seems to make the most sense. Now I just need to become a Senior Machine Learning Engineer and then I can learn Python.",
    img: "https://github.com/Tasups/images/blob/main/Gogopher.jpg?raw=true",
    img_alt: "go programming language mascot, which is a really cute gopher"
  },
  {
    id: 2,
    title: "How to Connect with a New Boss",
    desc: "Most of us have gone through some kind of transition with our supervisors or managers. Perhaps the person was recruited away to another company or maybe there was a merger and they got reassigned to another department or maybe you're in a new position. Whatever the reason, something important has been lost.\n When your boss leaves, they take with them their knowledge of your contributions, skills, knowledge, and expertise. And, a new boss means a completely blank slate.\n Your new job is to get to know your new boss, ASAP. If you don't take the time to build rapport, it could have deadly consequences to your career. The reason? If they don't know your value, they could make decisions that don't factor you in as a valuable asset.\n So, how do you connect with your new manager? It's easier than you think. It just requires you to be proactive. Use these four tips to build a good working relationship with your new boss.\n SPEAK UP IN MEETINGS\n If you are always in the background, now is the time to jump in. If you aren't seen as an active participant on the team, this could be a red flag to a boss who might be surveying the landscape for potential house cleaning later. Be a positive contributor.\n SETUP A ONE-ON-ONE MEETING \n If your new boss has not done so already, set up a time to meet with them to provide an overview of your work and to allow them to get to know you better.\n Building connections will also help you both assess your working styles to figure out how you will be able to communicate best. This can lay the ground work for a great collaborative working relationship.\n GIVE THEM REGULAR UPDATES\n You don't need to be a classic 'brown-noser,' but proactively providing updates on project status or other work you are conducting is one less question or request that the boss has to make.\n If you reliably turn in work or reports on-time and in an organized fashion, you'll be perceived as professional and as the department standard.\n EMPOWER, EDUCATION, AND ENGAGE \n New bosses don't necessarily want to admit that they are behind the learning curve in getting acclimated to a new company or division. They are struggling to get caught up with priorities, challenges, and opportunities, all while trying to get to know the team that will take them there.\n Be willing to share in a helpful way to give the new boss the knowledge and tools to get them up to speed as soon as possible. You could gain a very powerful career advocate as a result.\n If you build a reputation as a helpful, friendly resource who is competent in your work and an engaged member of the team, your new boss will see you as an important asset and include you in key projects and potential promotions.",
    img: "https://github.com/Tasups/images/blob/main/happyboss-blockimage.jpg?raw=true",
    img_alt: "happy boss"
  },
  {
    id: 3,
    title: "Article Three",
    desc: "It's important that both you and your boss are happy. There are many, many reasons for this, however, here's a small list: good relations create non-toxic workplaces, if you make your boss happy you're more likely to get paid well, and it makes work easier.",
    img: "https://github.com/Tasups/images/blob/main/happyboss-blockimage.jpg?raw=true",
    img_alt: "happy boss"
  }
  ]